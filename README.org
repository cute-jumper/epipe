#+TITLE: epipe

Use your favorite editor in the pipeline, featuring the support for
=emacsclient=.

This tool enables the use of emacs(client) for interactive editing of the
output/input of shell commands.

* Usage
  : command1 | epipe
  : epipe | command1
  : command1 | epipe | command2

  Since emacs can now be used in the pipeline, =epipe= saves us from writing
  =grep=, =sed=, =awk=, etc., in order to process the output/input of shell
  commands. The use of =epipe= can also replace some other interactive commands,
  for example, the interactive grep, [[https://github.com/mooz/percol][percol]].

  You need to set either =EDITOR= or =VISUAL= environment variable. By default,
  =epipe= uses =emacs= as the editor. You can set ~export EDITOR="emacsclient
  -ct"~ in order to use =emacsclient= as the editor.

  A really simple example:
  [[./epipe.gif]]



* References
  This idea has been implemented in =vipe=, but none of the current
  implementation supports =emacsclient=.

  - [[https://joeyh.name/code/moreutils/][vipe of moreutils]]: To the best of my knowledge, the original =vipe= is
    implemented by Joey Hess using perl. But it doesn't support using
    =emacsclient= as the editor.
  - [[https://github.com/juliangruber/vipe/][juliangruber/vipe]]: I found this repo after I wrote the code. This one is
    similar to =epipe= since the author also rewrote the original =vipe= of Joey
    Hess using shell script. However, the problem remains the same -- it doesn't
    support =emacsclient=.

* Perl Version
  I also put a modified verion of Joey's =vipe= in this repo: =epipe.pl=. The
  code of =vipe= is changed a little bit to support =emacsclient=. You can check
  it out if interested.

* Final Notes
  - Only test =epipe= on Arch Linux.
  - Can't use with =-a= option of =emacsclient=
